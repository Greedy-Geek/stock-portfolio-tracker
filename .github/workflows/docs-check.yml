name: Documentation Check

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  check-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.16.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: |
          # Try frozen lockfile first, fallback if incompatible
          pnpm install --frozen-lockfile || {
            echo "⚠️ Lockfile incompatible, installing with --no-frozen-lockfile"
            pnpm install --no-frozen-lockfile
          }

      - name: Check if API files changed
        id: api-changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "app/api/"; then
            echo "api_changed=true" >> $GITHUB_OUTPUT
            echo "📡 API files have changed"
          else
            echo "api_changed=false" >> $GITHUB_OUTPUT
            echo "📡 No API file changes detected"
          fi

      - name: Check if components changed
        id: component-changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "components/\|app/page.tsx\|app/layout.tsx"; then
            echo "components_changed=true" >> $GITHUB_OUTPUT
            echo "🧩 Component files have changed"
          else
            echo "components_changed=false" >> $GITHUB_OUTPUT
            echo "🧩 No component changes detected"
          fi

      - name: Check if config files changed
        id: config-changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E "(next.config|package.json|tsconfig|vercel.json)" -q; then
            echo "config_changed=true" >> $GITHUB_OUTPUT
            echo "⚙️  Configuration files have changed"
          else
            echo "config_changed=false" >> $GITHUB_OUTPUT
            echo "⚙️  No configuration changes detected"
          fi

      - name: Check if API docs updated
        if: steps.api-changes.outputs.api_changed == 'true'
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "API_DOCUMENTATION.md"; then
            echo "✅ API_DOCUMENTATION.md was updated along with API changes"
          else
            echo "⚠️ API files changed but API_DOCUMENTATION.md was not updated"
            echo "Please update API_DOCUMENTATION.md to reflect the API changes"
            exit 1
          fi

      - name: Check if architecture docs updated
        if: steps.component-changes.outputs.components_changed == 'true'
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E "(README.md|ARCHITECTURE.md)" -q; then
            echo "✅ Architecture documentation was updated along with component changes"
          else
            echo "⚠️ Component files changed but architecture documentation was not updated"
            echo "Please update README.md and/or ARCHITECTURE.md to reflect the component changes"
            # This is a warning, not a failure
          fi

      - name: Check if deployment docs updated
        if: steps.config-changes.outputs.config_changed == 'true'
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E "(DEPLOYMENT.md|CONTRIBUTING.md)" -q; then
            echo "✅ Deployment/contributing documentation was updated along with config changes"
          else
            echo "⚠️ Configuration files changed but deployment documentation was not updated"
            echo "Please update DEPLOYMENT.md and/or CONTRIBUTING.md if needed"
            # This is a warning, not a failure
          fi

      - name: Validate documentation
        run: |
          echo "🔍 Running documentation validation..."
          node scripts/validate-docs.js

      - name: Check for broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: "no"
          use-verbose-mode: "yes"
          config-file: ".github/markdown-link-check-config.json"

      - name: Check documentation coverage
        run: |
          echo "📊 Checking documentation coverage..."

          # Count API endpoints
          API_ENDPOINTS=$(find app/api -name "route.ts" | wc -l)
          echo "Found $API_ENDPOINTS API endpoints"

          # Check if all endpoints are documented
          if [ -f "API_DOCUMENTATION.md" ]; then
            DOCUMENTED_ENDPOINTS=$(grep -c "GET\|POST\|PUT\|DELETE" API_DOCUMENTATION.md || true)
            echo "Found $DOCUMENTED_ENDPOINTS documented endpoints"
            
            if [ $DOCUMENTED_ENDPOINTS -lt $API_ENDPOINTS ]; then
              echo "⚠️ Some API endpoints may not be documented"
            else
              echo "✅ All API endpoints appear to be documented"
            fi
          else
            echo "❌ API_DOCUMENTATION.md not found"
            exit 1
          fi

      - name: Generate documentation report
        if: always()
        run: |
          echo "📋 Documentation Status Report" >> $GITHUB_STEP_SUMMARY
          echo "================================" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.api-changes.outputs.api_changed }}" == "true" ]; then
            echo "- 📡 API files changed: ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "- 📡 API files changed: ❌" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.component-changes.outputs.components_changed }}" == "true" ]; then
            echo "- 🧩 Component files changed: ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "- 🧩 Component files changed: ❌" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.config-changes.outputs.config_changed }}" == "true" ]; then
            echo "- ⚙️ Config files changed: ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⚙️ Config files changed: ❌" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📚 Documentation files:" >> $GITHUB_STEP_SUMMARY

          for doc in README.md API_DOCUMENTATION.md ARCHITECTURE.md DEPLOYMENT.md CONTRIBUTING.md KITE_SETUP.md; do
            if [ -f "$doc" ]; then
              LAST_MODIFIED=$(stat -c %y "$doc" 2>/dev/null || stat -f %Sm "$doc" 2>/dev/null || echo "unknown")
              echo "- $doc: ✅ (last modified: $LAST_MODIFIED)" >> $GITHUB_STEP_SUMMARY
            else
              echo "- $doc: ❌ (missing)" >> $GITHUB_STEP_SUMMARY
            fi
          done

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "💡 Remember to update documentation when making code changes!" >> $GITHUB_STEP_SUMMARY
